{"data":{"site":{"siteMetadata":{"title":null,"author":null}},"markdownRemark":{"id":"9c5a2c8a-f544-5696-929d-91e63b8c2362","excerpt":"In this article we will be exploring running WebAssembly (or WASM) in node. Specifically we will see how to get Go 1.11 code compiled down…","html":"<h1></h1>\n<p>In this article we will be exploring running WebAssembly (or WASM) in node. Specifically we will see how to get Go 1.11 code compiled down to WASM and run that code in Node.js.</p>\n<p>We will compile this Go program:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// Main.go</span>\n<span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"fmt\"</span>\n  <span class=\"token string\">\"os\"</span>\n  <span class=\"token string\">\"strconv\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> n <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  n<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fib(%d) = %d\\n\"</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And run it like this within Node:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">const</span> Go <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Go'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Go</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/main.wasm`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngo<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The first thing you might be asking is:\n<img src=\"/but-why-7afb11957cdeb69ec574438adb29cbd5.gif\" alt=\"but why?\" title=\"But why?\"></p>\n<p>Well… <em>because</em> that’s why! Let’s go over the pros and cons:</p>\n<h2>Pros</h2>\n<ul>\n<li>I wanted to see if I could</li>\n</ul>\n<h2>Cons</h2>\n<ul>\n<li>It is slow (by an order of magnitude)</li>\n<li>Go compiles even simple programs to more than 2MB files</li>\n<li>It adds unnecessary complexity to a simple process</li>\n<li>Go code already runs on the server (WASM is primarily targeted at the browser)</li>\n</ul>\n<p>As you can see I am not going to be running this in production any time soon. But let’s do it anyway!</p>\n<h2>Compiling Go 1.11 to WebAssembly</h2>\n<p>Make sure you have the correct version of the go binary. I have:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ go version\ngo version go1.11 windows/amd64</code></pre></div>\n<p>Clone the repo to your local machine:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/rhamilton/<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></code></pre></div>\n<p>Install dependencies (right now I only have cross-env because working with environment variables is painful on windows):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> go-in-js\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre></div>\n<p>Run the build command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run build:go</code></pre></div>\n<p>This is the equivalent of running on a *NIX machine:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">GOOS<span class=\"token operator\">=</span>js GOARCH<span class=\"token operator\">=</span>wasm go build -o main.wasm</code></pre></div>\n<p>This should add a <code class=\"language-text\">main.wasm</code> file to your working directory. On my system it weighs in at a hefty 2.35MB. Not exactly the type of file you would want to distribute over the wire in a browser environment. But when you compare it to compiled go binaries it is in the same ballpark. (the sample program we are looking at comes in at 1.89MB for the compiled binary on windows)</p>\n<h2>Actually getting it to run in Node.js</h2>\n<p>This is where the pain started… As a starting point I tried to just load the WASM file in node according to the docs for WebAssembly.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> filename <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/main.wasm`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sourceBuffer <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> wasmInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span>sourceBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This gives me the handy error message:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[TypeError: WebAssembly Instantiation: Imports argument must be present and must be an object]</code></pre></div>\n<p>Cool, the optional second argument to instantiate isn’t so optional. Ok. Let’s give it an empty object:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">const</span> importObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> wasmInstance <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">instantiate</span><span class=\"token punctuation\">(</span>sourceBuffer<span class=\"token punctuation\">,</span> importObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now we get:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[TypeError: WebAssembly Instantiation: Import #0 module=&quot;go&quot; error: module is not an object or function]</code></pre></div>\n<p>Okay, progress. Now with a little bit of digging I determined that the import object needs to have an object with the key of “go”. So:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> importObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  go<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Running Go code in Node","date":"September 21, 2018"}}},"pageContext":{"slug":"/go-in-js/","previous":null,"next":null}}